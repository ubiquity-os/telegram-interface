name: Unified Bot Deployment

on:
  push:
    branches: ['**']  # Trigger on all branches
  workflow_dispatch:  # Allow manual triggering

permissions:
  id-token: write  # Required for OIDC token authentication
  contents: read   # Required for actions/checkout

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [production, preview]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.43.0

      - name: Verify Token Access (Personal)
        run: |
          echo "Verifying personal token access to project..."
          response=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer ${{ secrets.DENO_DEPLOY_TOKEN }}" \
          https://dash.deno.com/api/projects/telegram-interface)
          
          if [ "$response" -eq 200 ]; then
            echo "Token verification successful"
          else
            echo "ERROR: Token verification failed with status $response"
            exit 1
          fi

      - name: Deploy
        uses: denoland/deployctl@1.13.1
        env:
          DENO_DEPLOY_TOKEN: ${{ secrets.DENO_DEPLOY_TOKEN }}
        with:
          project: telegram-interface
          entrypoint: src/main.ts
          root: "."
          include: "**"
          exclude: "**.spec.ts"

      - name: Update webhook
        run: deno run --allow-net --allow-env scripts/update-webhook.ts
        env:
          DENO_DEPLOY_TOKEN: ${{ secrets.DENO_DEPLOY_TOKEN }}
          BOT_TOKEN: ${{ matrix.environment == 'production' && secrets.PRODUCTION_BOT_TOKEN || secrets.PREVIEW_BOT_TOKEN }}
          WEBHOOK_SECRET: ${{ matrix.environment == 'production' && secrets.WEBHOOK_SECRET_PRODUCTION || secrets.WEBHOOK_SECRET_PREVIEW }}
          IS_PRODUCTION: ${{ matrix.environment == 'production' }}
